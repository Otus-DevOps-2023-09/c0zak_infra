# image: ruby:2.4.2
image: alpine:latest

stages:
  - build
  - test
  - review
  - stage
  - production

# variables:
#   DATABASE_URL: 'mongodb://mongo/user_ports'

before_script:
  - apk add --no-cache docker openrc
  - if ! rc-service docker status &>/dev/null;  then rc-service docker start; fi
#  - cd reddit
#  - bundle install


build_job:
 stage: build
 script:
    - cd docker-monolith
    - docker build -t reddit .
    - docker save reddit > reddit.tar
    - mv reddit.tar /tmp
 artifacts:
    paths:
      - /tmp/reddit.tar

# test_unit_job:
#   stage: test
#   services:
#     - mongo:latest
#   script:
#     - ruby simpletest.rb

test_integration_job:
  stage: test
  script:
    - echo 'Testing 2'

deploy_dev_job:
  stage: review
  script:
    - echo 'Deploy'
  environment:
    name: dev
    url: http://dev.example.com

branch review:
  stage: review
  script: echo "Deploy to $CI_ENVIRONMENT_SLUG"
  environment:
    name: branch/$CI_COMMIT_REF_NAME
    url: http://$CI_ENVIRONMENT_SLUG.example.com
  only:
    - branches
  except:
    - master

deploy_review:
 stage: review
 script:
    - docker load < /tmp/reddit.tar
    - docker run -d -p 9292:9292 reddit
 environment:
    name: branch/$CI_COMMIT_REF_NAME
    url: http://$CI_ENVIRONMENT_SLUG.example.com
 dependencies:
    - build_job
 only:
    - branches
 except:
    - master

staging:
  stage: stage
  when: manual
  only:
    - /^\d+\.\d+\.\d+/
  script:
    - echo "Deploy"
  environment:
    name: beta
    url: http://beta.example.com

production:
  stage: production
  when: manual
  only:
    - /^\d+\.\d+\.\d+/
  script:
    - echo 'Deploy'
  environment:
    name: production
    url: http://example.com
